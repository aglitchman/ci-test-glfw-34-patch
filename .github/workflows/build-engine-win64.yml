# Keep this in sync with
# https://github.com/defold/defold/blob/dev/.github/workflows/engine-nightly.yml

name: Build Defold Windows x86_64

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main

env:
  DM_PACKAGES_URL: ./local_sdks
  BUILD_BRANCH: 1.10.2
  # Settings / Secrets and variables / Actions / Variables (tab) -> 
  #   New repository variable -> 
  #   `WIN32_SDK_RUN_ID` = copy-paste from the run id of the `package-win32-sdk.yml` run, i.e.
  #   "https://github.com/example/repo/actions/runs/12397740775" <- 12397740775 is the run id
  WIN32_SDK_RUN_ID: ${{ vars.WIN32_SDK_RUN_ID }}

jobs:
  bld-eng-windows:
    strategy:
      matrix:
        platform: [x86_64-win32]
    runs-on: windows-2022

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout Defold
        uses: actions/checkout@v4
        with:
          repository: defold/defold
          ref: ${{env.BUILD_BRANCH}}

      - name: Checkout patch
        uses: actions/checkout@v4
        with:
          path: patch

      - name: Apply patch and remove the dir
        shell: bash
        run: |
          git apply patch/all.patch
          rm -rf patch

      - name: Download SDKs
        uses: actions/download-artifact@v4
        with:
          name: local_sdks
          path: local_sdks
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ env.WIN32_SDK_RUN_ID }}
      - shell: bash
        run: ls -l local_sdks

      - name: Install Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
        with:
          python-version: 3.12

      - name: Install Java
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          java-version: '21.0.5+11.0.LTS'
          distribution: temurin

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Install dependencies
        shell: bash
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Build
        shell: bash
        run: ci/ci.sh --platform=${{ matrix.platform }} --skip-builtins --skip-tests --skip-build-tests --skip-docs engine

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: defold-${{ matrix.platform }}
          path: |
            tmp/dynamo_home/bin/${{ matrix.platform }}
            tmp/dynamo_home/lib/${{ matrix.platform }}

      - name: Checkout patch (for pushing)
        uses: actions/checkout@v4
        with:
          path: patch
          ref: main

      - name: Copy engine libraries to the patch
        shell: bash
        run: |
          mkdir -p patch/defold_patch/lib/${{ matrix.platform }}
          for lib in $(ls tmp/dynamo_home/lib/${{ matrix.platform }} | grep -E "(gamesys|physics_3d)\\."); do
            cp -r "tmp/dynamo_home/lib/${{ matrix.platform }}/${lib}" "patch/defold_patch/lib/${{ matrix.platform }}/${lib%.*}_patch.${lib##*.}"
          done

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          repository: patch
          commit_message: Apply new ${{ matrix.platform }} libraries
